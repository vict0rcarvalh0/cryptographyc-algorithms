package main

import (
	"fmt"
	"monoalphabetic/caesar"
	"monoalphabetic/substitution"
)

func main() {
	// Input Variables
	text := "teste"
	shift := 3

	messages := []string{
		"DNWADFEFUD",
		"MBSZDYQBKPSK",
		"WLUZVSVNVLEPZAV",
		"REQXFXVZEQXYXTLTDFE",
		"JWXTYFMQYWOWHYGWMYOM",
		"QNBETIOEVCQAIRBINIKIIL",
		"ALCDELPQWAOLDDLTNHLALNVNIWQVNCDENLHVN",
		"QWKQCEBUUCFUTHQTKHQJQDJERQJUQJUGKUVKHQ",
		"TIXKLBLMXGVBTXHVTFBGAHWHXQBMHFTLTITVBXGVBTXHLXZKXWHWHXJNBEBUKBH",
		"OBEBODBEPUFNQPRVFNBQSFOEFBWJWFSPQSFTFOUFFODPOUSBBWFSEBEFJSBMJCFSEBEF",
		"WNEPMLXDHXZEPEDHEZREATDRXREOTLGEKVNHTZREKELYOYRXREEMXJXTLTDFTRXITVDXRX",
		"NSBEPNQRHZEVBANBRFGNRZFHNIRYBPVQNQRZNFRZFHNQRGREZVANPNBQRFRETHVENQVNAGR",
		"ZUMOSZFWYXOEMJZMWVTZWXVYZBWHMSEFZFWXZVWXVYZFWTWOXEJZSZMFWVWONYEOZFEZJTW",
		"QUFGUCHKQUFCXKFCUCQKPGXKVCKUOCUGPHTGPVCNQUEQOEQTCIGOPQUVQTPCKPXGPEKXGKU",
		"ELZTMEMZJTEEOJCEMZZFKOKAOEWKJETETEMJSJFJRMZZNFKNGTETOEUYTZFJKUEQAENMKFARGJLEME",
		"EQJQRQDTYQPLOVQYEKPILQKRKVZIYTJQJPRQVQPGEVPAPVILQCTGZKVTQXIPAQFPQRPYQGPVFPLOVQJQ",
		"ZBTQHNRHCZCDRNAQDZUHCZDLSNCNRNRRDTRZRODBSNRBNMSHMTZRDMCNRDFQDCNCNRFQZMCDRBQHZCNQDR",
		"AHTDNEGCAEGXMTGUHVODNPPDOFOHDJFDPFNDRJSXEACTUFGOEBEXMVNDMBUSEMQLMQCFTPRRSJVLVPSXETWDSBEREYGUCFOQAWKGAECVPFUVOBUDETGXRFFRRQGOOMGJAEQGECQQDBFHQVGHLFFHIYCSASQIUUWUO",
		"PDDPAIPDZGSDGZFSBSPDPDUPEKZGUGXKBKXSAGVBGABGNKSDGUXSZKSXGNSDOGZGDDGPBPADOXMSEPDUGDDPGUGDDPBPZXKDSVSKABSGYKSAGFGVGNKVKMZGUGSQGPSABGADGNKVUPXOXGADYPXZGXCKOGDKZXKGVSEGEKBPABXKOG",
		"VRUVAEUSYMGYGSUINKAFRVKEZKGQVRYSMMVPRXFHZAUFFXRGPTUWZEJXVUHIZHVVZDKPNIRSZAVVBJLRYIYUHIGIMUOXRQRGVLGTRWJSVKUQCVVIILKVZICLJZYYNWGSOMTGVECMYIJIFPZQDBKWRSMIMLGHRMISKCXTBWVHZMDMFXVRXQG",
		"MZNQXCVQKIATMGHHPQVPXVEMHNLIYKWAMVLZMDNMWQJEBSPFQTXGZZMTXQAZIRGJCMVGTVZALRLEQQWFVSXLMGXVXQVNVEZXIPBIYKQNIVLKWZIVPMVQXVZAUBFIYBWFWMQQKVXMDIJRWSCQICTVLKMYXFCIZNLTPYCRGEDKWAJYTABNLHTIZVTW",
	}

	// Caesar test
	for shift := 1; shift <= 26; shift++ {
		fmt.Printf("Shift %d:\n", shift)
		for _, message := range messages {
			result := caesar.CeasarDecrypt(message, shift)
			fmt.Println(result)
		}
		fmt.Println()
	}

	caesar_encryption := caesar.CeasarEncrypt(text, shift)
	fmt.Println("Texto Cifrado:", caesar_encryption)

	caesar_decryption := caesar.CeasarDecrypt(caesar_encryption, 10)
	fmt.Println("Texto Defifrado:", caesar_decryption)

	// Substitution test
	substitution_encryption := substitution.SubstitutionEncrypt(text)
	fmt.Println("Texto Cifrado:", substitution_encryption)

	substitution_decryption := substitution.SubstitutionDecrypt(text)
	fmt.Println("Texto Decifrado:", substitution_decryption)
}
